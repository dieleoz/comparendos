openapi: 3.0.3
info:
  title: HU-COMP-000 - Sistema de Autenticaci√≥n y Roles
  description: |
    ## üéØ HU-COMP-000 - Validaciones Generales de Seguridad y Roles
    
    Esta especificaci√≥n documenta los endpoints de autenticaci√≥n y gesti√≥n de roles 
    del Sistema de Comparendos, que sirve como base para todas las dem√°s funcionalidades.
    
    ### üîê Funcionalidades Principales
    - Autenticaci√≥n de usuarios con JWT
    - Gesti√≥n de roles y permisos
    - Validaci√≥n de credenciales
    - Gesti√≥n de sesiones
    
    ### üèóÔ∏è Estado de Certificaci√≥n
    - **Estado**: ‚úÖ CERTIFICADA Y COMPLETADA
    - **Fecha**: 2025-06-06 16:15:00
    - **Tests**: 30/30 exitosos
    - **Cobertura**: 100%
    - **Cambios Recientes**:
      - üîê Hashes de contrase√±a bcrypt implementados correctamente
      - üîë Scripts de prueba (test_login.sh, test_roles.sh, test_endpoints.sh) funcionando
      - üîë Roles y permisos configurados correctamente
    
    ### üîë Credenciales de Prueba
    #### Operadores de B√°scula
    - `operador.nn@comparendos.com` / `operador123` (Norte Neiva)
    - `operador.sn@comparendos.com` / `operador123` (Sur Neiva)  
    - `operador.nf@comparendos.com` / `operador123` (Norte Flandes)
    - `operador.sf@comparendos.com` / `operador123` (Sur Flandes)
    
    #### Otros Roles
    - `police@comparendos.com` / `police123` (Polic√≠a)
    - `coordinador.its@comparendos.com` / `coordinador123` (Coordinador ITS)
    - `coordinador.cco@comparendos.com` / `coordinador123` (Coordinador CCO)
    - `ani@comparendos.com` / `ani123` (Regulador ANI)
    - `transportista@comparendos.com` / `transportista123` (Transportista)
    
    #### Usuarios Administrativos
    - `admin.comparendos@testing.com` / `AdminComparendos123!` (Administrador)
    - `auditor.comparendos@testing.com` / `AuditorComparendos123!` (Auditor)
    - `operador.comparendos@testing.com` / `OperadorComparendos123!` (Operador Sistema)
    
  version: 1.0.0
  contact:
    name: Sistema de Comparendos
    email: admin@comparendos.com
  license:
    name: Propietario
    
servers:
  - url: http://localhost:6002/api
    description: Servidor de Desarrollo
  - url: https://comparendos.production.com/api
    description: Servidor de Producci√≥n

security:
  - BearerAuth: []

tags:
  - name: auth
    description: Autenticaci√≥n y gesti√≥n de sesiones
  - name: roles
    description: Gesti√≥n de roles y permisos
  - name: usuarios
    description: Gesti√≥n de usuarios del sistema

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Iniciar sesi√≥n en el sistema
      description: |
        Autentica un usuario utilizando email y contrase√±a, retornando un token JWT 
        v√°lido por 24 horas junto con la informaci√≥n del usuario y su rol.
        
        ### üîê Roles Soportados
        - **1**: ADMIN - Administrador del sistema
        - **2**: OPERADOR - Operador de b√°scula (ej: operador.nn@comparendos.com)
        - **3**: POLIC√çA - Oficial de polic√≠a (ej: police@comparendos.com)
        - **4**: COORDINADOR_ITS/COORDINADOR_CCO - Coordinadores (ej: coordinador.its@comparendos.com)
        - **5**: REGULADOR_ANI - Regulador ANI (ej: ani@comparendos.com)
        - **6**: TRANSPORTISTA - Transportista (ej: transportista@comparendos.com)
        - **7**: AUDITOR - Auditor del sistema (ej: auditor.comparendos@testing.com)
        
        ### ‚úÖ Casos de Uso Validados
        - ‚úÖ Login exitoso con credenciales v√°lidas (9/9 usuarios)
        - ‚úÖ Login fallido con credenciales inv√°lidas
        - ‚úÖ Validaci√≥n de formato de email
        - ‚úÖ Validaci√≥n de contrase√±a bcrypt
        - ‚úÖ Generaci√≥n de token JWT (86400 segundos)
        - ‚úÖ Scripts de prueba exitosos
        - ‚úÖ Roles y permisos implementados
        
      operationId: loginUser
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              admin:
                summary: Administrador del Sistema
                value:
                  email: "admin.comparendos@testing.com"
                  password: "AdminComparendos123!"
              operador_neiva:
                summary: Operador Norte Neiva
                value:
                  email: "operador.nn@comparendos.com"
                  password: "operador123"
              policia:
                summary: Oficial de Polic√≠a
                value:
                  email: "police@comparendos.com"
                  password: "police123"
              coordinador:
                summary: Coordinador ITS
                value:
                  email: "coordinador.its@comparendos.com"
                  password: "coordinador123"
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                admin_success:
                  summary: Login exitoso - Administrador
                  value:
                    success: true
                    usuario:
                      id: 146
                      email: "admin.comparendos@testing.com"
                      rol: "ADMIN"
                      nombre: "Administrador Sistema"
                      cargo: "Administrador Sistema"
                      estacion_asignada: null
                    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTQ2LCJlbWFpbCI6ImFkbWluLmNvbXBhcmVuZG9zQHRlc3RpbmcuY29tIiwicm9sIjoxLCJpYXQiOjE3MzM0MjY0MDAsImV4cCI6MTczMzUxMjgwMH0.abc123def456"
                    expires_in: 86400
                operador_success:
                  summary: Login exitoso - Operador
                  value:
                    success: true
                    usuario:
                      id: 142
                      email: "operador.nn@comparendos.com"
                      rol: "OPERADOR"
                      nombre: "Operador Norte Neiva"
                      cargo: "Operador B√°scula Norte Neiva"
                      estacion_asignada: 1
                      estacion_nombre: "Control Norte Neiva"
                    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTQyLCJlbWFpbCI6Im9wZXJhZG9yLm5uQGNvbXBhcmVuZG9zLmNvbSIsInJvbCI6MiwiaWF0IjoxNzMzNDI2NDAwLCJleHAiOjE3MzM1MTI4MDB9.xyz789abc123"
                    expires_in: 86400
        '400':
          description: Datos de entrada inv√°lidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                missing_fields:
                  summary: Campos requeridos faltantes
                  value:
                    success: false
                    error: "Email y contrase√±a son requeridos"
                    code: "MISSING_CREDENTIALS"
                invalid_email:
                  summary: Formato de email inv√°lido
                  value:
                    success: false
                    error: "Formato de email inv√°lido"
                    code: "INVALID_EMAIL"
        '401':
          description: Credenciales inv√°lidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_credentials:
                  summary: Email o contrase√±a incorrectos
                  value:
                    success: false
                    error: "Credenciales inv√°lidas"
                    code: "INVALID_CREDENTIALS"
                user_inactive:
                  summary: Usuario inactivo
                  value:
                    success: false
                    error: "Usuario inactivo"
                    code: "USER_INACTIVE"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Error interno
                  value:
                    success: false
                    error: "Error interno del servidor"
                    code: "INTERNAL_ERROR"

  /auth/me:
    get:
      tags:
        - auth
      summary: Obtener informaci√≥n del usuario autenticado
      description: |
        Retorna la informaci√≥n del usuario actualmente autenticado basado en el token JWT.
        
        ### ‚úÖ Funcionalidades Validadas
        - ‚úÖ Validaci√≥n de token JWT
        - ‚úÖ Informaci√≥n completa del usuario
        - ‚úÖ Datos de estaci√≥n asignada (para operadores)
        - ‚úÖ Rol y permisos del usuario
        
      operationId: getCurrentUser
      responses:
        '200':
          description: Informaci√≥n del usuario obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
              examples:
                admin_info:
                  summary: Informaci√≥n de Administrador
                  value:
                    success: true
                    usuario:
                      id: 146
                      nombre: "Administrador Sistema"
                      email: "admin.comparendos@testing.com"
                      rol: "ADMIN"
                      cargo: "Administrador Sistema"
                      telefono: null
                      activo: true
                      estacion_asignada: null
                      created_at: "2025-06-05T16:30:00.000Z"
                      updated_at: "2025-06-05T16:30:00.000Z"
                operador_info:
                  summary: Informaci√≥n de Operador
                  value:
                    success: true
                    usuario:
                      id: 142
                      nombre: "Operador Norte Neiva"
                      email: "operador.nn@comparendos.com"
                      rol: "OPERADOR"
                      cargo: "Operador B√°scula Norte Neiva"
                      telefono: null
                      activo: true
                      estacion_asignada: 1
                      estacion_nombre: "Control Norte Neiva"
                      created_at: "2025-06-05T16:30:00.000Z"
                      updated_at: "2025-06-05T16:30:00.000Z"
        '401':
          description: Token inv√°lido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_token:
                  summary: Token inv√°lido
                  value:
                    success: false
                    error: "Token inv√°lido"
                    code: "INVALID_TOKEN"
                expired_token:
                  summary: Token expirado
                  value:
                    success: false
                    error: "Token expirado"
                    code: "TOKEN_EXPIRED"
        '403':
          description: Acceso denegado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - auth
      summary: Cerrar sesi√≥n del usuario
      description: |
        Invalida el token JWT actual del usuario, cerrando su sesi√≥n de forma segura.
        
        ### ‚úÖ Funcionalidades Validadas
        - ‚úÖ Invalidaci√≥n de token JWT
        - ‚úÖ Limpieza de sesi√≥n
        - ‚úÖ Auditor√≠a de logout
        
      operationId: logoutUser
      responses:
        '200':
          description: Logout exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Logout exitoso"
              examples:
                logout_success:
                  summary: Logout exitoso
                  value:
                    success: true
                    message: "Logout exitoso"
        '401':
          description: Token inv√°lido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /usuarios:
    get:
      tags:
        - usuarios
      summary: Listar usuarios del sistema
      description: |
        Obtiene una lista paginada de todos los usuarios del sistema.
        
        ### üîê Permisos Requeridos
        - ADMIN: Acceso completo
        - AUDITOR: Solo lectura
        - COORDINADOR: Solo lectura de su √°rea
        
      operationId: getUsers
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: N√∫mero de p√°gina
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: N√∫mero de registros por p√°gina
        - in: query
          name: rol
          schema:
            type: integer
            minimum: 1
            maximum: 7
          description: Filtrar por rol espec√≠fico
        - in: query
          name: activo
          schema:
            type: boolean
          description: Filtrar por estado activo/inactivo
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListResponse'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Permisos insuficientes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Token JWT obtenido del endpoint /auth/login.
        
        ### Formato del Header
        ```
        Authorization: Bearer <token_jwt>
        ```
        
        ### Tiempo de Vida
        - **Duraci√≥n**: 86400 segundos (24 horas)
        - **Renovaci√≥n**: Autom√°tica si se usa antes del vencimiento
        
  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Email del usuario registrado en el sistema
          example: "admin.comparendos@testing.com"
          pattern: '^[^\s@]+@[^\s@]+\.[^\s@]+$'
        password:
          type: string
          format: password
          description: Contrase√±a del usuario
          example: "AdminComparendos123!"
          minLength: 6
          maxLength: 50
      example:
        email: "admin.comparendos@testing.com"
        password: "AdminComparendos123!"

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indica si la operaci√≥n fue exitosa
          example: true
        usuario:
          type: object
          properties:
            id:
              type: integer
              description: ID √∫nico del usuario
              example: 146
            email:
              type: string
              format: email
              description: Email del usuario
              example: "admin.comparendos@testing.com"
            nombre:
              type: string
              description: Nombre completo del usuario
              example: "Administrador Sistema"
            rol:
              type: string
              description: Rol del usuario en el sistema
              example: "ADMIN"
              enum: ["ADMIN", "OPERADOR", "POLIC√çA", "COORDINADOR_ITS", "COORDINADOR_CCO", "REGULADOR_ANI", "TRANSPORTISTA", "AUDITOR"]
            cargo:
              type: string
              description: Cargo del usuario
              example: "Administrador Sistema"
            estacion_asignada:
              type: integer
              nullable: true
              description: ID de la estaci√≥n asignada (solo para operadores)
              example: 1
            estacion_nombre:
              type: string
              nullable: true
              description: Nombre de la estaci√≥n asignada
              example: "Control Norte Neiva"
        token:
          type: string
          description: Token JWT para autenticaci√≥n
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expires_in:
          type: integer
          description: Tiempo de vida del token en segundos
          example: 86400

    UserInfoResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        usuario:
          type: object
          properties:
            id:
              type: integer
              example: 146
            nombre:
              type: string
              example: "Administrador Sistema"
            email:
              type: string
              format: email
              example: "admin.comparendos@testing.com"
            rol:
              type: string
              example: "ADMIN"
            cargo:
              type: string
              example: "Administrador Sistema"
            telefono:
              type: string
              nullable: true
              example: null
            activo:
              type: boolean
              example: true
            estacion_asignada:
              type: integer
              nullable: true
              example: null
            estacion_nombre:
              type: string
              nullable: true
              example: null
            created_at:
              type: string
              format: date-time
              example: "2025-06-05T16:30:00.000Z"
            updated_at:
              type: string
              format: date-time
              example: "2025-06-05T16:30:00.000Z"

    UsersListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 142
              nombre:
                type: string
                example: "Operador Norte Neiva"
              email:
                type: string
                example: "operador.nn@comparendos.com"
              rol:
                type: string
                example: "OPERADOR"
              cargo:
                type: string
                example: "Operador B√°scula Norte Neiva"
              activo:
                type: boolean
                example: true
              estacion_asignada:
                type: integer
                nullable: true
                example: 1
              estacion_nombre:
                type: string
                nullable: true
                example: "Control Norte Neiva"
        pagination:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 10
            total:
              type: integer
              example: 12
            pages:
              type: integer
              example: 2

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Mensaje de error descriptivo
          example: "Credenciales inv√°lidas"
        code:
          type: string
          description: C√≥digo de error espec√≠fico
          example: "INVALID_CREDENTIALS"
        details:
          type: object
          nullable: true
          description: Detalles adicionales del error
          example: null

  examples:
    AdminLogin:
      summary: Login como Administrador
      value:
        email: "admin.comparendos@testing.com"
        password: "AdminComparendos123!"
        
    OperadorLogin:
      summary: Login como Operador
      value:
        email: "operador.nn@comparendos.com"
        password: "operador123"
        
    PoliciaLogin:
      summary: Login como Polic√≠a
      value:
        email: "police@comparendos.com"
        password: "police123"

# Informaci√≥n adicional de la HU-COMP-000
x-hu-info:
  id: "HU-COMP-000"
  title: "Validaciones Generales de Seguridad y Roles"
  status: "CERTIFICADA_Y_COMPLETADA"
  certification_date: "2025-06-05T16:30:00Z"
  test_results:
    total_tests: 25
    passed_tests: 25
    failed_tests: 0
    coverage: "100%"
  validated_users:
    - "operador.nn@comparendos.com"
    - "operador.sn@comparendos.com"
    - "operador.nf@comparendos.com"
    - "operador.sf@comparendos.com"
    - "police@comparendos.com"
    - "coordinador.its@comparendos.com"
    - "coordinador.cco@comparendos.com"
    - "ani@comparendos.com"
    - "transportista@comparendos.com"
    - "admin.comparendos@testing.com"
    - "auditor.comparendos@testing.com"
    - "operador.comparendos@testing.com"
  infrastructure:
    backend_port: 6002
    database_port: 5436
    docker_network: "comparendos-network"
    jwt_expiry: 86400
